@use "sass:color";
@use "sass:math";

@import "../colors/colors.scss";

.btn {
    outline: none;
    line-height: 0;
    font-family: inherit;
    font-size: medium;
    padding: .075rem .75rem;
    border: none;
    border-radius: $border-radius;  
    &:not(.icon){
        line-height: 200%;
    
    }
    &.icon {
        height: 2.75rem;
        width: 2.75rem;
        & > svg {
            transform: scale(1.25);
        }
    }
    @include theme-trasparency(background-color,0);
    @include theme-trasparency(color,1);

    &:hover:not(:disabled), &:focus:not(:disabled) {
        @include theme-trasparency(background-color,.1);
    }
    &:active:not(:disabled) {
        @include theme-trasparency(background-color,.2);
    }
    &.btn-regular {
        @include theme-trasparency(background-color,.1);

        &:hover:not(:disabled), &:focus:not(:disabled) {
            @include theme-trasparency(background-color,.15);
        }
        &:active:not(:disabled), &.active {
            @include theme-trasparency(background-color,.2);
        }
    }
    @each $color-name, $colors in $color-palette {
        @if $color-name != 'light' {
            
            &.btn-#{$color-name}:not(:disabled) {
                $blackness: color.blackness(get-color($color-name));
                $greeness: math.div(color.green(get-color($color-name)),255) * 100 ;
                @if $blackness <= 9% or $greeness > 80% {
                    color: get-color("light",100) !important;
                }
                @else {
                    color: get-color("light",800) !important;
                }
                background-color: get-color($color-name);

                &:hover, &:focus, &.active {
                    background-color: get-color($color-name,400);
                }
                &:active {
                    background-color: get-color($color-name,500);
                }
            }
        }
    }
    &.btn-large {
        font-size: larger;
    }
    transition: all 15ms;
    &:disabled {
        @include theme-trasparency(background-color,.1);
        @include theme-trasparency(color,.5);
        
    }

}

.bg-dark .invert-on-dark {
    filter: invert(1);

}